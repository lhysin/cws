# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: deploy-item-api

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar
        working-directory: ./item-api


      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          
          docker build --build-arg JAR_FILE=build/libs/cws-api.jar -t ${{ secrets.DOCKER_USERNAME }}/cws-item-api:amd64 -f Dockerfile.amd64 .
          docker build --build-arg JAR_FILE=build/libs/cws-api.jar -t ${{ secrets.DOCKER_USERNAME }}/cws-item-api:arm64 -f Dockerfile.arm64 .

          docker push ${{ secrets.DOCKER_USERNAME }}/cws-item-api:amd64
          docker push ${{ secrets.DOCKER_USERNAME }}/cws-item-api:arm64

        working-directory: ./item-api
